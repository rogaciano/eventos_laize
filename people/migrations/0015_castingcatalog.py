# Generated by Django 5.0 on 2025-04-04 14:08

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('people', '0014_person_origem_cadastro'),
    ]

    operations = [
        migrations.CreateModel(
            name='CastingCatalog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nome do Catálogo')),
                ('description', models.TextField(verbose_name='Descrição')),
                ('company', models.CharField(blank=True, max_length=255, null=True, verbose_name='Empresa/Cliente')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data de Criação')),
                ('min_height', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, verbose_name='Altura Mínima (m)')),
                ('max_height', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, verbose_name='Altura Máxima (m)')),
                ('min_weight', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Peso Mínimo (kg)')),
                ('max_weight', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Peso Máximo (kg)')),
                ('min_age', models.IntegerField(blank=True, null=True, verbose_name='Idade Mínima')),
                ('max_age', models.IntegerField(blank=True, null=True, verbose_name='Idade Máxima')),
                ('manequim', models.CharField(blank=True, max_length=50, null=True, verbose_name='Manequim')),
                ('min_efficiency', models.IntegerField(blank=True, null=True, verbose_name='Eficiência Mínima')),
                ('min_punctuality', models.IntegerField(blank=True, null=True, verbose_name='Pontualidade Mínima')),
                ('min_proactivity', models.IntegerField(blank=True, null=True, verbose_name='Proatividade Mínima')),
                ('min_appearance', models.IntegerField(blank=True, null=True, verbose_name='Aparência Mínima')),
                ('min_communication', models.IntegerField(blank=True, null=True, verbose_name='Comunicação Mínima')),
                ('cities', models.TextField(blank=True, null=True, verbose_name='Cidades')),
                ('states', models.TextField(blank=True, null=True, verbose_name='Estados')),
                ('status_choices', models.TextField(blank=True, null=True, verbose_name='Status')),
                ('search_query', models.CharField(blank=True, max_length=255, null=True, verbose_name='Busca por Nome')),
                ('filter_json', models.JSONField(blank=True, null=True, verbose_name='Filtros em JSON')),
                ('excluded_people', models.ManyToManyField(blank=True, related_name='excluded_castings', to='people.person', verbose_name='Pessoas Excluídas Manualmente')),
                ('eye_colors', models.ManyToManyField(blank=True, to='people.corolhos', verbose_name='Cores de Olhos')),
                ('genders', models.ManyToManyField(blank=True, to='people.genero', verbose_name='Gêneros')),
                ('hair_colors', models.ManyToManyField(blank=True, to='people.corcabelo', verbose_name='Cores de Cabelo')),
                ('included_people', models.ManyToManyField(blank=True, related_name='manual_castings', to='people.person', verbose_name='Pessoas Incluídas Manualmente')),
                ('professional_categories', models.ManyToManyField(blank=True, to='people.professionalcategory', verbose_name='Categorias Profissionais')),
                ('skin_colors', models.ManyToManyField(blank=True, to='people.corpele', verbose_name='Cores de Pele')),
            ],
            options={
                'verbose_name': 'Catálogo de Casting',
                'verbose_name_plural': 'Catálogos de Casting',
                'ordering': ['-date_created'],
            },
        ),
    ]
